<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Guess the Word Game</title>
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      background: linear-gradient(135deg, #a1c4fd, #c2e9fb);
      padding: 20px;
      color: #333;
      text-align: center;
    }

    .container {
      max-width: 700px;
      margin: auto;
      background: #ffffffcc;
      padding: 30px;
      border-radius: 16px;
      box-shadow: 0 8px 20px rgba(0,0,0,0.15);
    }

    h1 {
      color: #0d47a1;
    }

    .question {
      margin: 20px 0;
      font-size: 20px;
      font-weight: bold;
    }

    .options button {
      display: block;
      width: 100%;
      margin: 10px 0;
      padding: 12px;
      font-size: 16px;
      border-radius: 8px;
      border: none;
      cursor: pointer;
      background-color: #f5f5f5;
      transition: 0.3s;
    }

    .options button:hover {
      background-color: #bbdefb;
    }

    .correct {
      background-color: #c8e6c9 !important;
      color: #2e7d32;
    }

    .wrong {
      background-color: #ffcdd2 !important;
      color: #c62828;
    }

    .feedback {
      font-weight: bold;
      margin: 20px 0;
      font-size: 18px;
    }

    .score {
      margin-top: 30px;
      font-size: 20px;
      color: #1b5e20;
    }

    button:disabled {
      cursor: default;
    }

    .play-again {
      background-color: #2196f3;
      color: white;
      margin-top: 20px;
    }

    .play-again:hover {
      background-color: #1976d2;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Guess the Word</h1>
    <div id="game">
      <div id="question" class="question"></div>
      <div id="options" class="options"></div>
      <div id="feedback" class="feedback"></div>
      <div id="score" class="score"></div>
    </div>
  </div>

  <script>
    const questions = [
      {
        sentence: "He was very ___ about his chances of winning the award.",
        options: ["pessimistic", "optimistic", "neutral", "furious"],
        answer: "optimistic"
      },
      {
        sentence: "The manager gave her a ___ for being late so often.",
        options: ["bonus", "compliment", "warning", "promotion"],
        answer: "warning"
      },
      {
        sentence: "Although it was raining, they ___ with the picnic.",
        options: ["gave up", "called off", "went ahead", "turned back"],
        answer: "went ahead"
      },
      {
        sentence: "She was deeply ___ by the news of her friend’s accident.",
        options: ["moved", "excited", "bored", "annoyed"],
        answer: "moved"
      },
      {
        sentence: "We need to ___ the issue more before making a decision.",
        options: ["ignore", "discuss", "delay", "abandon"],
        answer: "discuss"
      },
      {
        sentence: "He was ___ from school for cheating on the exam.",
        options: ["suspended", "awarded", "invited", "promoted"],
        answer: "suspended"
      },
      {
        sentence: "The scientist made a groundbreaking ___ in cancer research.",
        options: ["discovery", "disaster", "discussion", "departure"],
        answer: "discovery"
      },
      {
        sentence: "We had to ___ the meeting due to technical issues.",
        options: ["postpone", "attend", "celebrate", "ignore"],
        answer: "postpone"
      },
      {
        sentence: "Despite his ___ beginnings, he became a successful entrepreneur.",
        options: ["humble", "famous", "arrogant", "easy"],
        answer: "humble"
      },
      {
        sentence: "The book was so ___ that I couldn’t put it down.",
        options: ["boring", "confusing", "gripping", "average"],
        answer: "gripping"
      }
    ];

    let currentQuestion = 0;
    let score = 0;

    function loadQuestion() {
      const q = questions[currentQuestion];
      document.getElementById('question').textContent = `Q${currentQuestion + 1}: ${q.sentence}`;
      const optionsDiv = document.getElementById('options');
      optionsDiv.innerHTML = '';
      q.options.forEach(option => {
        const btn = document.createElement('button');
        btn.textContent = option;
        btn.onclick = () => checkAnswer(btn, option);
        optionsDiv.appendChild(btn);
      });
      document.getElementById('feedback').textContent = '';
    }

    function checkAnswer(button, selected) {
      const correct = questions[currentQuestion].answer;
      const buttons = document.querySelectorAll('.options button');
      buttons.forEach(btn => btn.disabled = true);

      if (selected === correct) {
        score++;
        button.classList.add('correct');
        document.getElementById('feedback').textContent = "✅ Correct!";
      } else {
        button.classList.add('wrong');
        document.getElementById('feedback').textContent = `❌ Wrong. The correct answer was "${correct}".`;
      }

      setTimeout(() => {
        currentQuestion++;
        if (currentQuestion < questions.length) {
          loadQuestion();
        } else {
          showScore();
        }
      }, 1500);
    }

    function showScore() {
      document.getElementById('game').innerHTML = `
        <h2>🎉 Game Over!</h2>
        <p>You scored ${score} out of ${questions.length}.</p>
        <button class="play-again" onclick="location.reload()">Play Again</button>
      `;
    }

    loadQuestion();
  </script>
</body>
</html>
